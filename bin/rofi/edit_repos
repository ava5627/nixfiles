#!/usr/bin/env bash

REPODIR=$HOME/repos
CACHE_FILE=${XDG_CACHE_HOME:-$HOME/.cache}/repo_icons.json
if [ ! -d $REPODIR ]; then
    echo "No repos directory found"
    exit 1
fi
if [ ! -f $CACHE_FILE ]; then
    echo "No cache file found, creating..."
    echo "{}" > $CACHE_FILE
fi

declare -A icon_cache
if [ -f $CACHE_FILE ]; then
    icon_cache=$(jq -r 'to_entries | map("\(.key)=\(.value)") | .[]' $CACHE_FILE)
    for i in $icon_cache; do
        key=$(echo $i | cut -d'=' -f1)
        value=$(echo $i | cut -d'=' -f2)
        icon_cache[$key]=$value
    done
fi



repo_list=$(eza $REPODIR -1 -s age)

declare -A icons_list
icons_list[json]="application-json"
icons_list[yaml]="application-x-yaml"
icons_list[text]="text-x-generic"


cfg=""
for c in $repo_list
do
    if [[ -z "${icon_cache[$c]}" ]]; then
        icon=$(tokei -o json $REPODIR/$c 2>/dev/null | jq -r "del(.Total) | if (. | length > 0) then to_entries |  sort_by(-.value.code).[0].key | ascii_downcase else \"text\" end")
        jq ".\"$c\" = \"$icon\"" $CACHE_FILE > $CACHE_FILE.tmp
        mv $CACHE_FILE.tmp $CACHE_FILE
    else
        icon=${icon_cache[$c]}
    fi
    if [[ -z "${icons_list[$icon]}" ]]; then
        icon="text-x-$icon"
    else
        icon=${icons_list[$icon]}
    fi
    cfg+="$c\0icon\x1f$icon\n"
done
# remove last newline
cfg=${cfg::-2}

choice=$(echo -e $cfg | rofi -dmenu -p 'Edit config:' -icon-theme "hicolor" -i)

if [ "$choice" ]; then
    kitty $EDITOR $REPODIR/$choice
else
    echo "No Choice"
fi
