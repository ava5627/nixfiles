#!/usr/bin/env bash

REPODIR=$HOME/repos
CACHE_FILE=${XDG_CACHE_HOME:-$HOME/.cache}/repo_icons.json
if [ ! -d $REPODIR ]; then
    echo "No repos directory found"
    exit 1
fi
if [ ! -f $CACHE_FILE ]; then
    echo "No cache file found, creating..."
    echo "{}" > $CACHE_FILE
fi

declare -A repo_cache
declare -A icons
declare -A opened
if [ -f $CACHE_FILE ]; then
    repo_cache=$(jq -r 'to_entries | map("\(.key)=\(.value.icon),\(.value.opened)") | .[]' $CACHE_FILE)
    for i in $repo_cache; do
        key=$(echo $i | cut -d'=' -f1)
        value=$(echo $i | cut -d'=' -f2)
        icon=$(echo $value | cut -d',' -f1)
        opens=$(echo $value | cut -d',' -f2)
        icons[$key]=$icon
        opened[$key]=$opens
    done
fi


# sort repos by number of opens from $opened array then by accessed time
# repo_list=$(echo "$repo_list" | sort -t' ' -k1,1 -n | while read -r repo; do
repo_list=$(eza "$REPODIR" -1 | while read -r repo; do
    accessed=$(stat -c %X "$REPODIR/$repo" 2>/dev/null || echo 0)
    echo "$repo ${opened[$repo]:-0} $accessed"
done | sort -k2,2nr -k3,3nr | cut -d' ' -f1)

declare -A icons_list
icons_list[json]="application-json"
icons_list[yaml]="application-x-yaml"
icons_list[text]="text-x-generic"


cfg=""
for c in $repo_list
do
    if [[ -z "${icons[$c]}" ]]; then
        icon=$(tokei -o json $REPODIR/$c 2>/dev/null | jq -r "del(.Total) | if (. | length > 0) then to_entries |  sort_by(-.value.code).[0].key | ascii_downcase else \"text\" end")
        jq ".\"$c\" = { icon: \"$icon\", opened: 0 }" $CACHE_FILE > $CACHE_FILE.tmp
        mv $CACHE_FILE.tmp $CACHE_FILE
    else
        icon=${icons[$c]}
    fi
    if [[ -z "${icons_list[$icon]}" ]]; then
        icon="text-x-$icon"
    else
        icon=${icons_list[$icon]}
    fi
    cfg+="$c\0icon\x1f$icon\n"
done
# remove last newline
cfg=${cfg::-2}

choice=$(echo -e $cfg | rofi -dmenu -p 'Edit config:' -icon-theme "hicolor" -i)

if [ "$choice" ]; then
    jq ".\"$choice\".opened += 1" $CACHE_FILE > $CACHE_FILE.tmp
    mv $CACHE_FILE.tmp $CACHE_FILE
    kitty $EDITOR $REPODIR/$choice
else
    echo "No Choice"
fi
